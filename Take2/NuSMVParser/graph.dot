digraph G  { rankdir=LR 
state_1_1 [label=<1.1<br/>
  bit0.value = FALSE<br/>
  bit1.value = FALSE<br/>
  bit2.value = FALSE<br/>
  ferryman = FALSE<br/>
  previuosStepFerryman = FALSE<br/>
  goat = FALSE<br/>
  cabbage = FALSE<br/>
  wolf = FALSE<br/>
  carry = 0<br/>
  ferrymanCrossedRiver = FALSE<br/>
  bit0.carry_out = FALSE<br/>
  bit1.carry_out = FALSE<br/>
  bit2.carry_out = FALSE<br/>
>];
state_1_2 [label=<1.2<br/>
  ferryman = TRUE<br/>
  goat = TRUE<br/>
  carry = g<br/>
  ferrymanCrossedRiver = TRUE<br/>
>];
state_1_3 [label=<1.3<br/>
  bit0.value = TRUE<br/>
  ferryman = FALSE<br/>
  previuosStepFerryman = TRUE<br/>
  carry = 0<br/>
  bit0.carry_out = TRUE<br/>
>];
state_1_4 [label=<1.4<br/>
  bit0.value = FALSE<br/>
  bit1.value = TRUE<br/>
  ferryman = TRUE<br/>
  previuosStepFerryman = FALSE<br/>
  wolf = TRUE<br/>
  carry = w<br/>
  bit0.carry_out = FALSE<br/>
>];
state_1_5 [label=<1.5<br/>
  bit0.value = TRUE<br/>
  ferryman = FALSE<br/>
  previuosStepFerryman = TRUE<br/>
  goat = FALSE<br/>
  carry = g<br/>
  bit0.carry_out = TRUE<br/>
  bit1.carry_out = TRUE<br/>
>];
state_1_6 [label=<1.6<br/>
  bit0.value = FALSE<br/>
  bit1.value = FALSE<br/>
  bit2.value = TRUE<br/>
  ferryman = TRUE<br/>
  previuosStepFerryman = FALSE<br/>
  cabbage = TRUE<br/>
  carry = c<br/>
  bit0.carry_out = FALSE<br/>
  bit1.carry_out = FALSE<br/>
>];
state_1_7 [label=<1.7<br/>
  bit0.value = TRUE<br/>
  ferryman = FALSE<br/>
  previuosStepFerryman = TRUE<br/>
  carry = 0<br/>
  bit0.carry_out = TRUE<br/>
>];
state_1_8 [label=<1.8<br/>
  bit0.value = FALSE<br/>
  bit1.value = TRUE<br/>
  ferryman = TRUE<br/>
  previuosStepFerryman = FALSE<br/>
  goat = TRUE<br/>
  carry = g<br/>
  bit0.carry_out = FALSE<br/>
>];
state_1_9 [label=<1.9<br/>
  bit0.value = TRUE<br/>
  previuosStepFerryman = TRUE<br/>
  ferrymanCrossedRiver = FALSE<br/>
>];
state_1_10 [label=<1.10<br/>
>];
state_1_1->state_1_2;
state_1_2->state_1_3;
state_1_3->state_1_4;
state_1_4->state_1_5;
state_1_5->state_1_6;
state_1_6->state_1_7;
state_1_7->state_1_8;
state_1_8->state_1_9;
state_1_9->state_1_10;
state_1_10->state_1_8;
}
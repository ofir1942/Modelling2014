/*
* generated by Xtext
*/
grammar InternalExtendedSMV;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.osy.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.osy.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.osy.services.ExtendedSMVGrammarAccess;

}

@parser::members {
 
 	private ExtendedSMVGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ExtendedSMVGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getSectionsAssignment()); }
(rule__Model__SectionsAssignment)*
{ after(grammarAccess.getModelAccess().getSectionsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSection
entryRuleSection 
:
{ before(grammarAccess.getSectionRule()); }
	 ruleSection
{ after(grammarAccess.getSectionRule()); } 
	 EOF 
;

// Rule Section
ruleSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSectionAccess().getAlternatives()); }
(rule__Section__Alternatives)
{ after(grammarAccess.getSectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getCommentAssignment()); }
(rule__Comment__CommentAssignment)
{ after(grammarAccess.getCommentAccess().getCommentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariablesSection
entryRuleVariablesSection 
:
{ before(grammarAccess.getVariablesSectionRule()); }
	 ruleVariablesSection
{ after(grammarAccess.getVariablesSectionRule()); } 
	 EOF 
;

// Rule VariablesSection
ruleVariablesSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariablesSectionAccess().getGroup()); }
(rule__VariablesSection__Group__0)
{ after(grammarAccess.getVariablesSectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignments
entryRuleAssignments 
:
{ before(grammarAccess.getAssignmentsRule()); }
	 ruleAssignments
{ after(grammarAccess.getAssignmentsRule()); } 
	 EOF 
;

// Rule Assignments
ruleAssignments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentsAccess().getGroup()); }
(rule__Assignments__Group__0)
{ after(grammarAccess.getAssignmentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransactions
entryRuleTransactions 
:
{ before(grammarAccess.getTransactionsRule()); }
	 ruleTransactions
{ after(grammarAccess.getTransactionsRule()); } 
	 EOF 
;

// Rule Transactions
ruleTransactions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransactionsAccess().getGroup()); }
(rule__Transactions__Group__0)
{ after(grammarAccess.getTransactionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransactionStatement
entryRuleTransactionStatement 
:
{ before(grammarAccess.getTransactionStatementRule()); }
	 ruleTransactionStatement
{ after(grammarAccess.getTransactionStatementRule()); } 
	 EOF 
;

// Rule TransactionStatement
ruleTransactionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransactionStatementAccess().getGroup()); }
(rule__TransactionStatement__Group__0)
{ after(grammarAccess.getTransactionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransactionPrecondition
entryRuleTransactionPrecondition 
:
{ before(grammarAccess.getTransactionPreconditionRule()); }
	 ruleTransactionPrecondition
{ after(grammarAccess.getTransactionPreconditionRule()); } 
	 EOF 
;

// Rule TransactionPrecondition
ruleTransactionPrecondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransactionPreconditionAccess().getGroup()); }
(rule__TransactionPrecondition__Group__0)
{ after(grammarAccess.getTransactionPreconditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreconditionStatement
entryRulePreconditionStatement 
:
{ before(grammarAccess.getPreconditionStatementRule()); }
	 rulePreconditionStatement
{ after(grammarAccess.getPreconditionStatementRule()); } 
	 EOF 
;

// Rule PreconditionStatement
rulePreconditionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreconditionStatementAccess().getAlternatives()); }
(rule__PreconditionStatement__Alternatives)
{ after(grammarAccess.getPreconditionStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatePrecondition
entryRuleStatePrecondition 
:
{ before(grammarAccess.getStatePreconditionRule()); }
	 ruleStatePrecondition
{ after(grammarAccess.getStatePreconditionRule()); } 
	 EOF 
;

// Rule StatePrecondition
ruleStatePrecondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatePreconditionAccess().getGroup()); }
(rule__StatePrecondition__Group__0)
{ after(grammarAccess.getStatePreconditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanPrecondition
entryRuleBooleanPrecondition 
:
{ before(grammarAccess.getBooleanPreconditionRule()); }
	 ruleBooleanPrecondition
{ after(grammarAccess.getBooleanPreconditionRule()); } 
	 EOF 
;

// Rule BooleanPrecondition
ruleBooleanPrecondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanPreconditionAccess().getGroup()); }
(rule__BooleanPrecondition__Group__0)
{ after(grammarAccess.getBooleanPreconditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerPrecondition
entryRuleIntegerPrecondition 
:
{ before(grammarAccess.getIntegerPreconditionRule()); }
	 ruleIntegerPrecondition
{ after(grammarAccess.getIntegerPreconditionRule()); } 
	 EOF 
;

// Rule IntegerPrecondition
ruleIntegerPrecondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerPreconditionAccess().getGroup()); }
(rule__IntegerPrecondition__Group__0)
{ after(grammarAccess.getIntegerPreconditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostTransaction
entryRulePostTransaction 
:
{ before(grammarAccess.getPostTransactionRule()); }
	 rulePostTransaction
{ after(grammarAccess.getPostTransactionRule()); } 
	 EOF 
;

// Rule PostTransaction
rulePostTransaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostTransactionAccess().getGroup()); }
(rule__PostTransaction__Group__0)
{ after(grammarAccess.getPostTransactionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostTransactionStatement
entryRulePostTransactionStatement 
:
{ before(grammarAccess.getPostTransactionStatementRule()); }
	 rulePostTransactionStatement
{ after(grammarAccess.getPostTransactionStatementRule()); } 
	 EOF 
;

// Rule PostTransactionStatement
rulePostTransactionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostTransactionStatementAccess().getAlternatives()); }
(rule__PostTransactionStatement__Alternatives)
{ after(grammarAccess.getPostTransactionStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimplePostTransaction
entryRuleSimplePostTransaction 
:
{ before(grammarAccess.getSimplePostTransactionRule()); }
	 ruleSimplePostTransaction
{ after(grammarAccess.getSimplePostTransactionRule()); } 
	 EOF 
;

// Rule SimplePostTransaction
ruleSimplePostTransaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimplePostTransactionAccess().getAlternatives()); }
(rule__SimplePostTransaction__Alternatives)
{ after(grammarAccess.getSimplePostTransactionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatePostTransaction
entryRuleStatePostTransaction 
:
{ before(grammarAccess.getStatePostTransactionRule()); }
	 ruleStatePostTransaction
{ after(grammarAccess.getStatePostTransactionRule()); } 
	 EOF 
;

// Rule StatePostTransaction
ruleStatePostTransaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatePostTransactionAccess().getGroup()); }
(rule__StatePostTransaction__Group__0)
{ after(grammarAccess.getStatePostTransactionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanPostTransaction
entryRuleBooleanPostTransaction 
:
{ before(grammarAccess.getBooleanPostTransactionRule()); }
	 ruleBooleanPostTransaction
{ after(grammarAccess.getBooleanPostTransactionRule()); } 
	 EOF 
;

// Rule BooleanPostTransaction
ruleBooleanPostTransaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getGroup()); }
(rule__BooleanPostTransaction__Group__0)
{ after(grammarAccess.getBooleanPostTransactionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerPostTransaction
entryRuleIntegerPostTransaction 
:
{ before(grammarAccess.getIntegerPostTransactionRule()); }
	 ruleIntegerPostTransaction
{ after(grammarAccess.getIntegerPostTransactionRule()); } 
	 EOF 
;

// Rule IntegerPostTransaction
ruleIntegerPostTransaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getGroup()); }
(rule__IntegerPostTransaction__Group__0)
{ after(grammarAccess.getIntegerPostTransactionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalPostTRansaction
entryRuleConditionalPostTRansaction 
:
{ before(grammarAccess.getConditionalPostTRansactionRule()); }
	 ruleConditionalPostTRansaction
{ after(grammarAccess.getConditionalPostTRansactionRule()); } 
	 EOF 
;

// Rule ConditionalPostTRansaction
ruleConditionalPostTRansaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalPostTRansactionAccess().getNameAssignment()); }
(rule__ConditionalPostTRansaction__NameAssignment)
{ after(grammarAccess.getConditionalPostTRansactionAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
(rule__VariableDeclaration__Alternatives)
{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerDeclarion
entryRuleIntegerDeclarion 
:
{ before(grammarAccess.getIntegerDeclarionRule()); }
	 ruleIntegerDeclarion
{ after(grammarAccess.getIntegerDeclarionRule()); } 
	 EOF 
;

// Rule IntegerDeclarion
ruleIntegerDeclarion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerDeclarionAccess().getGroup()); }
(rule__IntegerDeclarion__Group__0)
{ after(grammarAccess.getIntegerDeclarionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanDeclarion
entryRuleBooleanDeclarion 
:
{ before(grammarAccess.getBooleanDeclarionRule()); }
	 ruleBooleanDeclarion
{ after(grammarAccess.getBooleanDeclarionRule()); } 
	 EOF 
;

// Rule BooleanDeclarion
ruleBooleanDeclarion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanDeclarionAccess().getGroup()); }
(rule__BooleanDeclarion__Group__0)
{ after(grammarAccess.getBooleanDeclarionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateVariableDeclaration
entryRuleStateVariableDeclaration 
:
{ before(grammarAccess.getStateVariableDeclarationRule()); }
	 ruleStateVariableDeclaration
{ after(grammarAccess.getStateVariableDeclarationRule()); } 
	 EOF 
;

// Rule StateVariableDeclaration
ruleStateVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getGroup()); }
(rule__StateVariableDeclaration__Group__0)
{ after(grammarAccess.getStateVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression 
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getAlternatives()); }
(rule__AssignmentExpression__Alternatives)
{ after(grammarAccess.getAssignmentExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanAssignment
entryRuleBooleanAssignment 
:
{ before(grammarAccess.getBooleanAssignmentRule()); }
	 ruleBooleanAssignment
{ after(grammarAccess.getBooleanAssignmentRule()); } 
	 EOF 
;

// Rule BooleanAssignment
ruleBooleanAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getGroup()); }
(rule__BooleanAssignment__Group__0)
{ after(grammarAccess.getBooleanAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOL
entryRuleBOOL 
:
{ before(grammarAccess.getBOOLRule()); }
	 ruleBOOL
{ after(grammarAccess.getBOOLRule()); } 
	 EOF 
;

// Rule BOOL
ruleBOOL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLAccess().getAlternatives()); }
(rule__BOOL__Alternatives)
{ after(grammarAccess.getBOOLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerAssignment
entryRuleIntegerAssignment 
:
{ before(grammarAccess.getIntegerAssignmentRule()); }
	 ruleIntegerAssignment
{ after(grammarAccess.getIntegerAssignmentRule()); } 
	 EOF 
;

// Rule IntegerAssignment
ruleIntegerAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getGroup()); }
(rule__IntegerAssignment__Group__0)
{ after(grammarAccess.getIntegerAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateAssignment
entryRuleStateAssignment 
:
{ before(grammarAccess.getStateAssignmentRule()); }
	 ruleStateAssignment
{ after(grammarAccess.getStateAssignmentRule()); } 
	 EOF 
;

// Rule StateAssignment
ruleStateAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAssignmentAccess().getGroup()); }
(rule__StateAssignment__Group__0)
{ after(grammarAccess.getStateAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Section__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSectionAccess().getVariablesSectionParserRuleCall_0()); }
	ruleVariablesSection
{ after(grammarAccess.getSectionAccess().getVariablesSectionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSectionAccess().getAssignmentsParserRuleCall_1()); }
	ruleAssignments
{ after(grammarAccess.getSectionAccess().getAssignmentsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSectionAccess().getTransactionsParserRuleCall_2()); }
	ruleTransactions
{ after(grammarAccess.getSectionAccess().getTransactionsParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreconditionStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreconditionStatementAccess().getIntegerPreconditionParserRuleCall_0()); }
	ruleIntegerPrecondition
{ after(grammarAccess.getPreconditionStatementAccess().getIntegerPreconditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPreconditionStatementAccess().getBooleanPreconditionParserRuleCall_1()); }
	ruleBooleanPrecondition
{ after(grammarAccess.getPreconditionStatementAccess().getBooleanPreconditionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPreconditionStatementAccess().getStatePreconditionParserRuleCall_2()); }
	ruleStatePrecondition
{ after(grammarAccess.getPreconditionStatementAccess().getStatePreconditionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPreconditionStatementAccess().getCommentParserRuleCall_3()); }
	ruleComment
{ after(grammarAccess.getPreconditionStatementAccess().getCommentParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostTransactionStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostTransactionStatementAccess().getConditionalPostTRansactionParserRuleCall_0()); }
	ruleConditionalPostTRansaction
{ after(grammarAccess.getPostTransactionStatementAccess().getConditionalPostTRansactionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPostTransactionStatementAccess().getSimplePostTransactionParserRuleCall_1()); }
	ruleSimplePostTransaction
{ after(grammarAccess.getPostTransactionStatementAccess().getSimplePostTransactionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimplePostTransaction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePostTransactionAccess().getIntegerPostTransactionParserRuleCall_0()); }
	ruleIntegerPostTransaction
{ after(grammarAccess.getSimplePostTransactionAccess().getIntegerPostTransactionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSimplePostTransactionAccess().getBooleanPostTransactionParserRuleCall_1()); }
	ruleBooleanPostTransaction
{ after(grammarAccess.getSimplePostTransactionAccess().getBooleanPostTransactionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSimplePostTransactionAccess().getStatePostTransactionParserRuleCall_2()); }
	ruleStatePostTransaction
{ after(grammarAccess.getSimplePostTransactionAccess().getStatePostTransactionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getIntegerDeclarionParserRuleCall_0()); }
	ruleIntegerDeclarion
{ after(grammarAccess.getVariableDeclarationAccess().getIntegerDeclarionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getBooleanDeclarionParserRuleCall_1()); }
	ruleBooleanDeclarion
{ after(grammarAccess.getVariableDeclarationAccess().getBooleanDeclarionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getStateVariableDeclarationParserRuleCall_2()); }
	ruleStateVariableDeclaration
{ after(grammarAccess.getVariableDeclarationAccess().getStateVariableDeclarationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getVariableDeclarationAccess().getCommentParserRuleCall_3()); }
	ruleComment
{ after(grammarAccess.getVariableDeclarationAccess().getCommentParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getIntegerAssignmentParserRuleCall_0()); }
	ruleIntegerAssignment
{ after(grammarAccess.getAssignmentExpressionAccess().getIntegerAssignmentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAssignmentExpressionAccess().getBooleanAssignmentParserRuleCall_1()); }
	ruleBooleanAssignment
{ after(grammarAccess.getAssignmentExpressionAccess().getBooleanAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAssignmentExpressionAccess().getStateAssignmentParserRuleCall_2()); }
	ruleStateAssignment
{ after(grammarAccess.getAssignmentExpressionAccess().getStateAssignmentParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAssignmentExpressionAccess().getCommentParserRuleCall_3()); }
	ruleComment
{ after(grammarAccess.getAssignmentExpressionAccess().getCommentParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLAccess().getTrueKeyword_0()); }

	'True' 

{ after(grammarAccess.getBOOLAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBOOLAccess().getFalseKeyword_1()); }

	'False' 

{ after(grammarAccess.getBOOLAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__VariablesSection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesSection__Group__0__Impl
	rule__VariablesSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesSection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesSectionAccess().getVARKeyword_0()); }

	'VAR' 

{ after(grammarAccess.getVariablesSectionAccess().getVARKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesSection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesSection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesSection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariablesSectionAccess().getVariablesAssignment_1()); }
(rule__VariablesSection__VariablesAssignment_1)
{ after(grammarAccess.getVariablesSectionAccess().getVariablesAssignment_1()); }
)
(
{ before(grammarAccess.getVariablesSectionAccess().getVariablesAssignment_1()); }
(rule__VariablesSection__VariablesAssignment_1)*
{ after(grammarAccess.getVariablesSectionAccess().getVariablesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignments__Group__0__Impl
	rule__Assignments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentsAccess().getAssignmentsAction_0()); }
(

)
{ after(grammarAccess.getAssignmentsAccess().getAssignmentsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignments__Group__1__Impl
	rule__Assignments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentsAccess().getASSIGNKeyword_1()); }

	'ASSIGN' 

{ after(grammarAccess.getAssignmentsAccess().getASSIGNKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignments__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignments__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAssignmentsAccess().getAssignmentsAssignment_2()); }
(rule__Assignments__AssignmentsAssignment_2)
{ after(grammarAccess.getAssignmentsAccess().getAssignmentsAssignment_2()); }
)
(
{ before(grammarAccess.getAssignmentsAccess().getAssignmentsAssignment_2()); }
(rule__Assignments__AssignmentsAssignment_2)*
{ after(grammarAccess.getAssignmentsAccess().getAssignmentsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transactions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transactions__Group__0__Impl
	rule__Transactions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transactions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionsAccess().getTRANSKeyword_0()); }

	'TRANS' 

{ after(grammarAccess.getTransactionsAccess().getTRANSKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transactions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transactions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transactions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTransactionsAccess().getTransactionAssignment_1()); }
(rule__Transactions__TransactionAssignment_1)
{ after(grammarAccess.getTransactionsAccess().getTransactionAssignment_1()); }
)
(
{ before(grammarAccess.getTransactionsAccess().getTransactionAssignment_1()); }
(rule__Transactions__TransactionAssignment_1)*
{ after(grammarAccess.getTransactionsAccess().getTransactionAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransactionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransactionStatement__Group__0__Impl
	rule__TransactionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionStatementAccess().getPreconditionAssignment_0()); }
(rule__TransactionStatement__PreconditionAssignment_0)
{ after(grammarAccess.getTransactionStatementAccess().getPreconditionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransactionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransactionStatement__Group__1__Impl
	rule__TransactionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionStatementAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getTransactionStatementAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransactionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransactionStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionStatementAccess().getPostTransactionAssignment_2()); }
(rule__TransactionStatement__PostTransactionAssignment_2)
{ after(grammarAccess.getTransactionStatementAccess().getPostTransactionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TransactionPrecondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransactionPrecondition__Group__0__Impl
	rule__TransactionPrecondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionPrecondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionPreconditionAccess().getPreconditionsAssignment_0()); }
(rule__TransactionPrecondition__PreconditionsAssignment_0)
{ after(grammarAccess.getTransactionPreconditionAccess().getPreconditionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransactionPrecondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransactionPrecondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionPrecondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionPreconditionAccess().getGroup_1()); }
(rule__TransactionPrecondition__Group_1__0)*
{ after(grammarAccess.getTransactionPreconditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransactionPrecondition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransactionPrecondition__Group_1__0__Impl
	rule__TransactionPrecondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionPrecondition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionPreconditionAccess().getLogicalOperatorAssignment_1_0()); }
(rule__TransactionPrecondition__LogicalOperatorAssignment_1_0)
{ after(grammarAccess.getTransactionPreconditionAccess().getLogicalOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransactionPrecondition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransactionPrecondition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionPrecondition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionPreconditionAccess().getPreconditionsAssignment_1_1()); }
(rule__TransactionPrecondition__PreconditionsAssignment_1_1)
{ after(grammarAccess.getTransactionPreconditionAccess().getPreconditionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatePrecondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePrecondition__Group__0__Impl
	rule__StatePrecondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePrecondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePreconditionAccess().getVarAssignment_0()); }
(rule__StatePrecondition__VarAssignment_0)
{ after(grammarAccess.getStatePreconditionAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatePrecondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePrecondition__Group__1__Impl
	rule__StatePrecondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePrecondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePreconditionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getStatePreconditionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatePrecondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePrecondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePrecondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePreconditionAccess().getValueAssignment_2()); }
(rule__StatePrecondition__ValueAssignment_2)
{ after(grammarAccess.getStatePreconditionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanPrecondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPrecondition__Group__0__Impl
	rule__BooleanPrecondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrecondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPreconditionAccess().getVarAssignment_0()); }
(rule__BooleanPrecondition__VarAssignment_0)
{ after(grammarAccess.getBooleanPreconditionAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanPrecondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPrecondition__Group__1__Impl
	rule__BooleanPrecondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrecondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPreconditionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getBooleanPreconditionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanPrecondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPrecondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrecondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPreconditionAccess().getValueAssignment_2()); }
(rule__BooleanPrecondition__ValueAssignment_2)
{ after(grammarAccess.getBooleanPreconditionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerPrecondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPrecondition__Group__0__Impl
	rule__IntegerPrecondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPrecondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPreconditionAccess().getVarAssignment_0()); }
(rule__IntegerPrecondition__VarAssignment_0)
{ after(grammarAccess.getIntegerPreconditionAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPrecondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPrecondition__Group__1__Impl
	rule__IntegerPrecondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPrecondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPreconditionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getIntegerPreconditionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPrecondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPrecondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPrecondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPreconditionAccess().getValueAssignment_2()); }
(rule__IntegerPrecondition__ValueAssignment_2)
{ after(grammarAccess.getIntegerPreconditionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostTransaction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostTransaction__Group__0__Impl
	rule__PostTransaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostTransaction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostTransactionAccess().getPostTransactionsAssignment_0()); }
(rule__PostTransaction__PostTransactionsAssignment_0)
{ after(grammarAccess.getPostTransactionAccess().getPostTransactionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostTransaction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostTransaction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostTransaction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostTransactionAccess().getGroup_1()); }
(rule__PostTransaction__Group_1__0)*
{ after(grammarAccess.getPostTransactionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostTransaction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostTransaction__Group_1__0__Impl
	rule__PostTransaction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostTransaction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostTransactionAccess().getLogicalOperatorAssignment_1_0()); }
(rule__PostTransaction__LogicalOperatorAssignment_1_0)
{ after(grammarAccess.getPostTransactionAccess().getLogicalOperatorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostTransaction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostTransaction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostTransaction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostTransactionAccess().getPostTransactionsAssignment_1_1()); }
(rule__PostTransaction__PostTransactionsAssignment_1_1)
{ after(grammarAccess.getPostTransactionAccess().getPostTransactionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatePostTransaction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePostTransaction__Group__0__Impl
	rule__StatePostTransaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePostTransaction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePostTransactionAccess().getNextKeyword_0()); }

	'next' 

{ after(grammarAccess.getStatePostTransactionAccess().getNextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatePostTransaction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePostTransaction__Group__1__Impl
	rule__StatePostTransaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePostTransaction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePostTransactionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getStatePostTransactionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatePostTransaction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePostTransaction__Group__2__Impl
	rule__StatePostTransaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePostTransaction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePostTransactionAccess().getVarAssignment_2()); }
(rule__StatePostTransaction__VarAssignment_2)
{ after(grammarAccess.getStatePostTransactionAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatePostTransaction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePostTransaction__Group__3__Impl
	rule__StatePostTransaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePostTransaction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePostTransactionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getStatePostTransactionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatePostTransaction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePostTransaction__Group__4__Impl
	rule__StatePostTransaction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePostTransaction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePostTransactionAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getStatePostTransactionAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatePostTransaction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatePostTransaction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatePostTransaction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePostTransactionAccess().getValueAssignment_5()); }
(rule__StatePostTransaction__ValueAssignment_5)
{ after(grammarAccess.getStatePostTransactionAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__BooleanPostTransaction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPostTransaction__Group__0__Impl
	rule__BooleanPostTransaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPostTransaction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getNextKeyword_0()); }

	'next' 

{ after(grammarAccess.getBooleanPostTransactionAccess().getNextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanPostTransaction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPostTransaction__Group__1__Impl
	rule__BooleanPostTransaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPostTransaction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getBooleanPostTransactionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanPostTransaction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPostTransaction__Group__2__Impl
	rule__BooleanPostTransaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPostTransaction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getVarAssignment_2()); }
(rule__BooleanPostTransaction__VarAssignment_2)
{ after(grammarAccess.getBooleanPostTransactionAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanPostTransaction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPostTransaction__Group__3__Impl
	rule__BooleanPostTransaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPostTransaction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getBooleanPostTransactionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanPostTransaction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPostTransaction__Group__4__Impl
	rule__BooleanPostTransaction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPostTransaction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getBooleanPostTransactionAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanPostTransaction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanPostTransaction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPostTransaction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getValueAssignment_5()); }
(rule__BooleanPostTransaction__ValueAssignment_5)
{ after(grammarAccess.getBooleanPostTransactionAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IntegerPostTransaction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPostTransaction__Group__0__Impl
	rule__IntegerPostTransaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPostTransaction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getNextKeyword_0()); }

	'next' 

{ after(grammarAccess.getIntegerPostTransactionAccess().getNextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPostTransaction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPostTransaction__Group__1__Impl
	rule__IntegerPostTransaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPostTransaction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIntegerPostTransactionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPostTransaction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPostTransaction__Group__2__Impl
	rule__IntegerPostTransaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPostTransaction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getVarAssignment_2()); }
(rule__IntegerPostTransaction__VarAssignment_2)
{ after(grammarAccess.getIntegerPostTransactionAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPostTransaction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPostTransaction__Group__3__Impl
	rule__IntegerPostTransaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPostTransaction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIntegerPostTransactionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPostTransaction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPostTransaction__Group__4__Impl
	rule__IntegerPostTransaction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPostTransaction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getIntegerPostTransactionAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerPostTransaction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerPostTransaction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPostTransaction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getValueAssignment_5()); }
(rule__IntegerPostTransaction__ValueAssignment_5)
{ after(grammarAccess.getIntegerPostTransactionAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IntegerDeclarion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDeclarion__Group__0__Impl
	rule__IntegerDeclarion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDeclarion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDeclarionAccess().getNameAssignment_0()); }
(rule__IntegerDeclarion__NameAssignment_0)
{ after(grammarAccess.getIntegerDeclarionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerDeclarion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDeclarion__Group__1__Impl
	rule__IntegerDeclarion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDeclarion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDeclarionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getIntegerDeclarionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerDeclarion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDeclarion__Group__2__Impl
	rule__IntegerDeclarion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDeclarion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDeclarionAccess().getIntegerKeyword_2()); }

	'integer' 

{ after(grammarAccess.getIntegerDeclarionAccess().getIntegerKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerDeclarion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerDeclarion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDeclarion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDeclarionAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getIntegerDeclarionAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BooleanDeclarion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanDeclarion__Group__0__Impl
	rule__BooleanDeclarion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanDeclarion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDeclarionAccess().getNameAssignment_0()); }
(rule__BooleanDeclarion__NameAssignment_0)
{ after(grammarAccess.getBooleanDeclarionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanDeclarion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanDeclarion__Group__1__Impl
	rule__BooleanDeclarion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanDeclarion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDeclarionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getBooleanDeclarionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanDeclarion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanDeclarion__Group__2__Impl
	rule__BooleanDeclarion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanDeclarion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDeclarionAccess().getBooleanKeyword_2()); }

	'boolean' 

{ after(grammarAccess.getBooleanDeclarionAccess().getBooleanKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanDeclarion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanDeclarion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanDeclarion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDeclarionAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getBooleanDeclarionAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StateVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__0__Impl
	rule__StateVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getNameAssignment_0()); }
(rule__StateVariableDeclaration__NameAssignment_0)
{ after(grammarAccess.getStateVariableDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__1__Impl
	rule__StateVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStateVariableDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__2__Impl
	rule__StateVariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStateVariableDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__3__Impl
	rule__StateVariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getStatesAssignment_3()); }
(rule__StateVariableDeclaration__StatesAssignment_3)
{ after(grammarAccess.getStateVariableDeclarationAccess().getStatesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__4__Impl
	rule__StateVariableDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getGroup_4()); }
(rule__StateVariableDeclaration__Group_4__0)*
{ after(grammarAccess.getStateVariableDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__5__Impl
	rule__StateVariableDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStateVariableDeclarationAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getStateVariableDeclarationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__StateVariableDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group_4__0__Impl
	rule__StateVariableDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getStateVariableDeclarationAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getStatesAssignment_4_1()); }
(rule__StateVariableDeclaration__StatesAssignment_4_1)
{ after(grammarAccess.getStateVariableDeclarationAccess().getStatesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__0__Impl
	rule__BooleanAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getInitKeyword_0()); }

	'init' 

{ after(grammarAccess.getBooleanAssignmentAccess().getInitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__1__Impl
	rule__BooleanAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getBooleanAssignmentAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__2__Impl
	rule__BooleanAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getVarAssignment_2()); }
(rule__BooleanAssignment__VarAssignment_2)
{ after(grammarAccess.getBooleanAssignmentAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__3__Impl
	rule__BooleanAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getBooleanAssignmentAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__4__Impl
	rule__BooleanAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getColonEqualsSignKeyword_4()); }

	':=' 

{ after(grammarAccess.getBooleanAssignmentAccess().getColonEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__5__Impl
	rule__BooleanAssignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getValueAssignment_5()); }
(rule__BooleanAssignment__ValueAssignment_5)
{ after(grammarAccess.getBooleanAssignmentAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanAssignment__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanAssignment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getBooleanAssignmentAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IntegerAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__0__Impl
	rule__IntegerAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getInitKeyword_0()); }

	'init' 

{ after(grammarAccess.getIntegerAssignmentAccess().getInitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__1__Impl
	rule__IntegerAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIntegerAssignmentAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__2__Impl
	rule__IntegerAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getVarAssignment_2()); }
(rule__IntegerAssignment__VarAssignment_2)
{ after(grammarAccess.getIntegerAssignmentAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__3__Impl
	rule__IntegerAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIntegerAssignmentAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__4__Impl
	rule__IntegerAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getColonEqualsSignKeyword_4()); }

	':=' 

{ after(grammarAccess.getIntegerAssignmentAccess().getColonEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__5__Impl
	rule__IntegerAssignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getValueAssignment_5()); }
(rule__IntegerAssignment__ValueAssignment_5)
{ after(grammarAccess.getIntegerAssignmentAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerAssignment__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerAssignment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getIntegerAssignmentAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__StateAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateAssignment__Group__0__Impl
	rule__StateAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getInitKeyword_0()); }

	'init' 

{ after(grammarAccess.getStateAssignmentAccess().getInitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateAssignment__Group__1__Impl
	rule__StateAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getStateAssignmentAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateAssignment__Group__2__Impl
	rule__StateAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getVarAssignment_2()); }
(rule__StateAssignment__VarAssignment_2)
{ after(grammarAccess.getStateAssignmentAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateAssignment__Group__3__Impl
	rule__StateAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getStateAssignmentAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateAssignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateAssignment__Group__4__Impl
	rule__StateAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getColonEqualsSignKeyword_4()); }

	':=' 

{ after(grammarAccess.getStateAssignmentAccess().getColonEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateAssignment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateAssignment__Group__5__Impl
	rule__StateAssignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getValueAssignment_5()); }
(rule__StateAssignment__ValueAssignment_5)
{ after(grammarAccess.getStateAssignmentAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateAssignment__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateAssignment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getStateAssignmentAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__Model__SectionsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSectionsSectionParserRuleCall_0()); }
	ruleSection{ after(grammarAccess.getModelAccess().getSectionsSectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__CommentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getCommentSMV_COMMENTTerminalRuleCall_0()); }
	RULE_SMV_COMMENT{ after(grammarAccess.getCommentAccess().getCommentSMV_COMMENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesSection__VariablesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesSectionAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getVariablesSectionAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__AssignmentsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentsAccess().getAssignmentsAssignmentExpressionParserRuleCall_2_0()); }
	ruleAssignmentExpression{ after(grammarAccess.getAssignmentsAccess().getAssignmentsAssignmentExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transactions__TransactionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionsAccess().getTransactionTransactionStatementParserRuleCall_1_0()); }
	ruleTransactionStatement{ after(grammarAccess.getTransactionsAccess().getTransactionTransactionStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionStatement__PreconditionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionStatementAccess().getPreconditionTransactionPreconditionParserRuleCall_0_0()); }
	ruleTransactionPrecondition{ after(grammarAccess.getTransactionStatementAccess().getPreconditionTransactionPreconditionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionStatement__PostTransactionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionStatementAccess().getPostTransactionPostTransactionParserRuleCall_2_0()); }
	rulePostTransaction{ after(grammarAccess.getTransactionStatementAccess().getPostTransactionPostTransactionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionPrecondition__PreconditionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionPreconditionAccess().getPreconditionsPreconditionStatementParserRuleCall_0_0()); }
	rulePreconditionStatement{ after(grammarAccess.getTransactionPreconditionAccess().getPreconditionsPreconditionStatementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionPrecondition__LogicalOperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionPreconditionAccess().getLogicalOperatorAND_ORTerminalRuleCall_1_0_0()); }
	RULE_AND_OR{ after(grammarAccess.getTransactionPreconditionAccess().getLogicalOperatorAND_ORTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransactionPrecondition__PreconditionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransactionPreconditionAccess().getPreconditionsPreconditionStatementParserRuleCall_1_1_0()); }
	rulePreconditionStatement{ after(grammarAccess.getTransactionPreconditionAccess().getPreconditionsPreconditionStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatePrecondition__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePreconditionAccess().getVarStateVariableDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getStatePreconditionAccess().getVarStateVariableDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getStatePreconditionAccess().getVarStateVariableDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getStatePreconditionAccess().getVarStateVariableDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatePrecondition__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePreconditionAccess().getValueIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getStatePreconditionAccess().getValueIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrecondition__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPreconditionAccess().getVarBooleanDeclarionCrossReference_0_0()); }
(
{ before(grammarAccess.getBooleanPreconditionAccess().getVarBooleanDeclarionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getBooleanPreconditionAccess().getVarBooleanDeclarionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getBooleanPreconditionAccess().getVarBooleanDeclarionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPrecondition__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPreconditionAccess().getValueBOOLParserRuleCall_2_0()); }
	ruleBOOL{ after(grammarAccess.getBooleanPreconditionAccess().getValueBOOLParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPrecondition__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPreconditionAccess().getVarIntegerDeclarionCrossReference_0_0()); }
(
{ before(grammarAccess.getIntegerPreconditionAccess().getVarIntegerDeclarionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerPreconditionAccess().getVarIntegerDeclarionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getIntegerPreconditionAccess().getVarIntegerDeclarionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPrecondition__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPreconditionAccess().getValueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getIntegerPreconditionAccess().getValueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostTransaction__PostTransactionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostTransactionAccess().getPostTransactionsPostTransactionStatementParserRuleCall_0_0()); }
	rulePostTransactionStatement{ after(grammarAccess.getPostTransactionAccess().getPostTransactionsPostTransactionStatementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostTransaction__LogicalOperatorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostTransactionAccess().getLogicalOperatorAND_ORTerminalRuleCall_1_0_0()); }
	RULE_AND_OR{ after(grammarAccess.getPostTransactionAccess().getLogicalOperatorAND_ORTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostTransaction__PostTransactionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostTransactionAccess().getPostTransactionsPostTransactionStatementParserRuleCall_1_1_0()); }
	rulePostTransactionStatement{ after(grammarAccess.getPostTransactionAccess().getPostTransactionsPostTransactionStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatePostTransaction__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePostTransactionAccess().getVarStateVariableDeclarationCrossReference_2_0()); }
(
{ before(grammarAccess.getStatePostTransactionAccess().getVarStateVariableDeclarationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getStatePostTransactionAccess().getVarStateVariableDeclarationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getStatePostTransactionAccess().getVarStateVariableDeclarationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatePostTransaction__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatePostTransactionAccess().getValueIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getStatePostTransactionAccess().getValueIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPostTransaction__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getVarBooleanDeclarionCrossReference_2_0()); }
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getVarBooleanDeclarionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getBooleanPostTransactionAccess().getVarBooleanDeclarionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getBooleanPostTransactionAccess().getVarBooleanDeclarionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanPostTransaction__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanPostTransactionAccess().getValueBOOLParserRuleCall_5_0()); }
	ruleBOOL{ after(grammarAccess.getBooleanPostTransactionAccess().getValueBOOLParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPostTransaction__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getVarIntegerDeclarionCrossReference_2_0()); }
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getVarIntegerDeclarionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerPostTransactionAccess().getVarIntegerDeclarionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getIntegerPostTransactionAccess().getVarIntegerDeclarionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerPostTransaction__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerPostTransactionAccess().getValueINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getIntegerPostTransactionAccess().getValueINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalPostTRansaction__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalPostTRansactionAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getConditionalPostTRansactionAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDeclarion__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerDeclarionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getIntegerDeclarionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanDeclarion__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanDeclarionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getBooleanDeclarionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getStateVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__StatesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getStatesIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getStateVariableDeclarationAccess().getStatesIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__StatesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getStatesIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getStateVariableDeclarationAccess().getStatesIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getVarBooleanDeclarionCrossReference_2_0()); }
(
{ before(grammarAccess.getBooleanAssignmentAccess().getVarBooleanDeclarionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getBooleanAssignmentAccess().getVarBooleanDeclarionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getBooleanAssignmentAccess().getVarBooleanDeclarionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanAssignment__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAssignmentAccess().getValueBOOLParserRuleCall_5_0()); }
	ruleBOOL{ after(grammarAccess.getBooleanAssignmentAccess().getValueBOOLParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getVarIntegerDeclarionCrossReference_2_0()); }
(
{ before(grammarAccess.getIntegerAssignmentAccess().getVarIntegerDeclarionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerAssignmentAccess().getVarIntegerDeclarionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getIntegerAssignmentAccess().getVarIntegerDeclarionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerAssignment__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAssignmentAccess().getValueINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getIntegerAssignmentAccess().getValueINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getVarStateVariableDeclarationCrossReference_2_0()); }
(
{ before(grammarAccess.getStateAssignmentAccess().getVarStateVariableDeclarationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getStateAssignmentAccess().getVarStateVariableDeclarationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getStateAssignmentAccess().getVarStateVariableDeclarationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateAssignment__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAssignmentAccess().getValueIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getStateAssignmentAccess().getValueIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SMV_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_AND_OR : ('&'|'|');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


